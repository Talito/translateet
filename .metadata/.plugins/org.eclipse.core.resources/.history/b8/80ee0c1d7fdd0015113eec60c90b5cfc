package org.netcomputing.webservices.server;

import javax.ws.rs.Consumes;
import javax.ws.rs.DELETE;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.PUT;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.Context;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Request;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.UriInfo;
import javax.xml.bind.JAXBElement;

import org.netcomputing.webservices.datamodel.Text;
import org.netcomputing.webservices.datamodel.TextDAO;
import org.netcomputing.webservices.datamodel.User;
import org.netcomputing.webservices.datamodel.UserDAO;

public class RequestResource {
	@Context
	UriInfo uriInfo;
	@Context
	Request request;
	String id;
	public RequestResource(UriInfo uriInfo, Request request, String id) {
		this.uriInfo = uriInfo;
		this.request = request;
		this.id = id;
	}
	
	//Application integration 		
	@GET
	@Produces({MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON})
	public Text getText() {
		Text t = TextDAO.instance.getModel().get(id);
		if(t==null)
			throw new RuntimeException("GET: text with keys " + id +  " not found"); // id => words
		return t;
	}
	
	// For the browser
	@Path("/texts/requests")
	@GET
	@Produces(MediaType.TEXT_XML)
	public Text getTextHTML() {
		Text t = TextDAO.instance.getModel().get(id);
		if(t==null)
			throw new RuntimeException("GET: text with key words " + id +  ", not found");
		return t;
	}
	
	
	@Path("/texts/requests/{request}")
	@POST
	public void postRequest(String request) {
		// some hidden logic and database checks
		
	}
	
	@Path("/texts/requests/{text}")
	@DELETE
	public void deleteLocation() {
		Text t = TextDAO.instance.getModel().remove(id);
		if(t==null)
			throw new RuntimeException("DELETE: Text with key words " + id +  ", not found");
	}	

} 