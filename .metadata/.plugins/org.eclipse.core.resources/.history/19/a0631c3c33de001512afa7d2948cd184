package org.netcomputing.webservices.server;

import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.core.Context;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Request;
import javax.ws.rs.core.UriInfo;

import org.netcomputing.webservices.datamodel.Text;
import org.netcomputing.webservices.datamodel.TextDAO;
import org.netcomputing.webservices.datamodel.User;
import org.netcomputing.webservices.datamodel.UserDAO;

@Path("/users/")
public class UserResource {
	@Context
	UriInfo uriInfo;
	@Context
	Request request;
	String id;
	public UserResource(UriInfo uriInfo, Request request, String id) {
		this.uriInfo = uriInfo;
		this.request = request;
		this.id = id;
	}
	
	//Application integration 		
	@GET
	@Produces({MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON})
	public Text getText() {
		Text t = TextDAO.instance.getModel().get(id);
		if(t==null)
			throw new RuntimeException("GET: text with keys " + id +  " not found"); // id => words
		return t;
	}
	
	// For the browser	
	/** 
	 * Method that hides the logic to search in the database users with the given UID
	 * @param uid in the web path
	 * @return user
	 */
	@Path("{uid}")
	@GET
	@Produces({MediaType.TEXT_XML, MediaType.APPLICATION_JSON})
	public User getUserProfile(@PathParam("uid") long uid) {
		User u = UserDAO.instance.getModel().get(uid);
		if(u==null)
			throw new RuntimeException("GET: user with given " + uid + " not found.");
		return u;
	}
	
	/** 
	 * Method that hides the logic to search in the database users with the given score
	 * @param score in the web path
	 * @return array of users
	 */
	@Path("{score}")
	@GET
	@Produces({MediaType.TEXT_XML, MediaType.APPLICATION_JSON})
	public User getUsersByScore(@PathParam("score") int score) {
		User u = UserDAO.instance.getModel().get(score);
		if(u==null)
			throw new RuntimeException("GET: text with key words " + id +  ", not found");
		return u;
	}
	
} 