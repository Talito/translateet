package org.netcomputing.webservices.datamodel;

import java.util.HashMap;
import java.util.Map;

/**
 * Singleton design pattern The possible implementation of Java depends on the
 * version of Java you are using. As of Java 6 you can define singletons with a
 * single-element enum type. This way is currently the best way to implement a
 * singleton in Java 1.6 or later according to the book "Effective Java" from
 * Joshua Bloch.
 */

public enum UserDAO {
	
	/**
	 * The unique instance of UserDAO
	 */
	instance;

	private Map<String, User> contentProvider = new HashMap<String, User>();


	private UserDAO() {
		User u = new User();
		u.setUID(00001);
		u.setName("Jasel");
		u.setScore(5);
		contentProvider.put("00001", u);
	}

	public Map<String, User> getModel() {
		return contentProvider;
	}

}