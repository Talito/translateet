package org.netcomputing.webservices.database;

import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

import org.netcomputing.webservices.datamodel.User;
import org.netcomputing.webservices.server.ConfigLoader;

import com.mongodb.BasicDBObject;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBCursor;
import com.mongodb.MongoClient;

public enum databaseTest {
	
	/**
	 * The (unique) instance of MongoDB.
	 */
	instance;
	
	     
	/**
	 * The abstraction of a (concrete) database.
	 */
	private static DB db ;
	
	/**
	 * The mongoClient that connects to a database instance
	 * @see https://docs.mongodb.org/getting-started/java/client/
	 */
	private static MongoClient mongoClient;

	/**
	 * The variable that abstracts the loading of the configuration file.
	 * By the time UserRepository is created, ConfigLoader should already
	 * be set up.
	 */
	private ConfigLoader configLoader;
	
	/**
	 * The name of the collection hard-coded. It could be wise to think 
	 * about its convenience to be added to the configLoader.
	 */
	private String collectionName = "users";
	
	private DBCollection usersCollection;
	
	Logger logger = Logger.getLogger(org.netcomputing.webservices.database.UserRepository.class.getName());
	
	private databaseTest() {};

	/**
	 * Initializes the singleton object.
	 * @param configLoader holds the preloaded settings from an external file.
	 */
	public void initializeUserRepository(ConfigLoader configLoader) {
		if (configLoader != null) {
			this.configLoader = configLoader;
			DB database = mongoClient.getDB(this.configLoader.getDbName()); // if the DB doesn't exist, Mongo will create it
			usersCollection = database.getCollection(collectionName);
		} else {
			logger.log(Level.SEVERE, "initializeUserRepository called with a null-valued configLoader.");
		}
	}
	
	/**
	 * 
	 * @param user cannot be null. Its UID is automatically generated by Mongo.
	 */
	public void createUser(User user) {
		logger.log(Level.INFO, "createUser called in databaseTest class.");
		if (user != null) {
			BasicDBObject document = new BasicDBObject();
			//document.put("uid", u.getUID());
			document.put("name",  user.getName());
			document.put("score",  user.getScore());
			//document.put("translation", user.getTranslations());	
		} else {
			logger.log(Level.SEVERE, "createUser method called with null-valued user.");
		}
	}
	
	/**
	 * 
	 * @param user cannot be null. Its UID is automatically generated by Mongo.
	 */
	public User getUser(String uid) {
		BasicDBObject searchQuery = new BasicDBObject();
		searchQuery.put("uid", uid);
		DBCursor cursor = usersCollection.find(searchQuery);
		User user = (User) cursor.next();
		logger.log(Level.INFO, "User retrieved from Users collection: " + user.getName());
		return user;
	}

	
	public ArrayList<User> getAllUsers() {
		ArrayList<User> allUsers = null;
		DBCursor curs = usersCollection.find();
		return allUsers;
	}


}
